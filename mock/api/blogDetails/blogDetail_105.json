{
    "blogDetail": {
            "nid": "2781380185839995869",
            "sourcets": "1498456808000",
            "ts": "1498456808000",
            "author": "Tom",
            "title": "基础| 详解 ES6 Modules",
            "url": "http:\/\/mt.sohu.com\/it\/d20170606\/146565491_495695.shtml",
            "imageurls": [],
            "site": "mt.sohu.com",
            "isvideo": 0,
            "type": "searchnews",
            "abs": "",
            "content": [{
                "type": "image",
                "data": {
                    "original": {
                        "url": "http:\/\/img.mp.itc.cn\/upload\/20170606\/5b576114500943208758c00da3d6d3dd_th.jpg",
                        "width": 0,
                        "height": 0
                    },
                    "small": {
                        "url": "https:\/\/timg01.bdimg.com\/timg?tc&quality=90&size=b960_640&di=9f651ef0e41eea5298a4c4e304e727ff&sec=1498456808&src=http:\/\/img.mp.itc.cn\/upload\/20170606\/5b576114500943208758c00da3d6d3dd_th.jpg",
                        "width": 0,
                        "height": 0
                    },
                    "big": {
                        "url": "https:\/\/timg01.bdimg.com\/timg?tc&quality=90&size=b960_640&di=9f651ef0e41eea5298a4c4e304e727ff&sec=1498456808&src=http:\/\/img.mp.itc.cn\/upload\/20170606\/5b576114500943208758c00da3d6d3dd_th.jpg",
                        "width": 0,
                        "height": 0
                    }
                }
            }, {
                "type": "text",
                "data": "作者｜波同学"
            }, {
                "type": "text",
                "data": "原文｜http:\/\/www.jianshu.com\/p\/b7db6224a4aa"
            }, {
                "type": "text",
                "data": "对于新人朋友来说，想要自己去搞定一个ES6开发环境并不是一件容易的事情，因为构建工具的学习本身又是一个非常大的方向，我们需要花费不少的时间才能掌握它。"
            }, {
                "type": "text",
                "data": "好在慢慢的开始有大神提供了一些非常简单易懂，学习成本非常低的解决方案来帮助大家学习。create-react-app就是这些解决方案中，个人认为最简单易懂的一种方式。"
            }, {
                "type": "text",
                "data": "所以在学习ES6 modules之前，先跟大家介绍一下create-react-app的安装与使用。"
            }, {
                "type": "text",
                "data": "<b>1、确保自己的本地环境已经安装了node与npm<\/b>"
            }, {
                "type": "text",
                "data": "通常安装的方式就是去node的官方网站下载安装，在安装node的时候，npm也会一起被安装。"
            }, {
                "type": "text",
                "data": "<b>2、安装一个好用的命令行工具<\/b>"
            }, {
                "type": "text",
                "data": "在windows环境下，系统默认的cmd非常难用，所以我个人比较推荐大家使用git.bash 或者 cmder。"
            }, {
                "type": "text",
                "data": "在git安装目录下会有一个bash工具，找到安装目录直接使用即可。"
            }, {
                "type": "text",
                "data": "在mac上就方便很多了，你可以直接使用系统自带的terminal工具，就非常好用。但是一般我推荐大家使用iterm2，并安装oh my zsh插件。具体的配置大家可以自己去折腾，网上的教程应该足够帮助你搞定这一切了。"
            }, {
                "type": "text",
                "data": "1、iterm2 下载地址 http:\/\/www.iterm2.com\/downloads.html"
            }, {
                "type": "text",
                "data": "2、oh my zsh 主题选择 https:\/\/github.com\/robbyrussell\/oh-my-zsh\/wiki\/External-themes"
            }, {
                "type": "image",
                "data": {
                    "original": {
                        "url": "http:\/\/img.mp.itc.cn\/upload\/20170606\/a4c82029e316467eb4245ea1eee2fb3c_th.jpg",
                        "width": 0,
                        "height": 0
                    },
                    "small": {
                        "url": "https:\/\/timg01.bdimg.com\/timg?tc&quality=90&size=b960_640&di=3770fd5380e392d0f291d9397d54bc76&sec=1498456808&src=http:\/\/img.mp.itc.cn\/upload\/20170606\/a4c82029e316467eb4245ea1eee2fb3c_th.jpg",
                        "width": 0,
                        "height": 0
                    },
                    "big": {
                        "url": "https:\/\/timg01.bdimg.com\/timg?tc&quality=90&size=b960_640&di=3770fd5380e392d0f291d9397d54bc76&sec=1498456808&src=http:\/\/img.mp.itc.cn\/upload\/20170606\/a4c82029e316467eb4245ea1eee2fb3c_th.jpg",
                        "width": 0,
                        "height": 0
                    }
                }
            }, {
                "type": "text",
                "data": "另外还强烈推荐一款超高颜值的终端工具 hyperTerm。"
            }, {
                "type": "text",
                "data": "这款工具的特色就是颜值高，第一感觉就是惊艳，大家不妨一试。"
            }, {
                "type": "image",
                "data": {
                    "original": {
                        "url": "http:\/\/img.mp.itc.cn\/upload\/20170606\/38fe7c7b4a7845ae9f6ae2ea589933f7_th.jpg",
                        "width": 0,
                        "height": 0
                    },
                    "small": {
                        "url": "https:\/\/timg01.bdimg.com\/timg?tc&quality=90&size=b960_640&di=59c7e01f88982061b69d34398d6db8ce&sec=1498456808&src=http:\/\/img.mp.itc.cn\/upload\/20170606\/38fe7c7b4a7845ae9f6ae2ea589933f7_th.jpg",
                        "width": 0,
                        "height": 0
                    },
                    "big": {
                        "url": "https:\/\/timg01.bdimg.com\/timg?tc&quality=90&size=b960_640&di=59c7e01f88982061b69d34398d6db8ce&sec=1498456808&src=http:\/\/img.mp.itc.cn\/upload\/20170606\/38fe7c7b4a7845ae9f6ae2ea589933f7_th.jpg",
                        "width": 0,
                        "height": 0
                    }
                }
            }, {
                "type": "text",
                "data": "3、hyperTerm 下载地址 https:\/\/hyper.is\/"
            }, {
                "type": "text",
                "data": "<b>3、安装create-react-app<\/b>"
            }, {
                "type": "text",
                "data": "在命令行工具中使用查看版本的方式确保node与npm都安装好之后，我们就可以安装create-react-app了。"
            }, {
                "type": "image",
                "data": {
                    "original": {
                        "url": "http:\/\/img.mp.itc.cn\/upload\/20170606\/7ae7835c74a741d4a4ef2c86c54909d4.jpg",
                        "width": 0,
                        "height": 0
                    },
                    "small": {
                        "url": "https:\/\/timg01.bdimg.com\/timg?tc&quality=90&size=b960_640&di=ce94b1753313e862fb8de6877bc9cc26&sec=1498456808&src=http:\/\/img.mp.itc.cn\/upload\/20170606\/7ae7835c74a741d4a4ef2c86c54909d4.jpg",
                        "width": 0,
                        "height": 0
                    },
                    "big": {
                        "url": "https:\/\/timg01.bdimg.com\/timg?tc&quality=90&size=b960_640&di=ce94b1753313e862fb8de6877bc9cc26&sec=1498456808&src=http:\/\/img.mp.itc.cn\/upload\/20170606\/7ae7835c74a741d4a4ef2c86c54909d4.jpg",
                        "width": 0,
                        "height": 0
                    }
                }
            }, {
                "type": "text",
                "data": "使用npm全局安装create-react-app"
            }, {
                "type": "text",
                "data": "然后我们就可以使用create-react-app来创建我们的第一个项目。"
            }, {
                "type": "text",
                "data": "找到一个你要存放项目的根目录，假设叫做develop，运行以下指令。"
            }, {
                "type": "text",
                "data": "create-react-app会自动帮助我们在develop目录下创建一个叫做es6app的文件夹，这就是我们新创建的项目。"
            }, {
                "type": "text",
                "data": "当项目创建完成之后，在命令行工具中，我们会看到如图所示的提示。这些提示告诉了我们如何运行项目npm start，如何打包项目npm run build等，这里我就不再赘述。"
            }, {
                "type": "image",
                "data": {
                    "original": {
                        "url": "http:\/\/img.mp.itc.cn\/upload\/20170606\/444dc5a448044ce79f7354eece1d4f60_th.jpg",
                        "width": 0,
                        "height": 0
                    },
                    "small": {
                        "url": "https:\/\/timg01.bdimg.com\/timg?tc&quality=90&size=b960_640&di=16cad00a47ef5bdb5a6c2a9837c4016b&sec=1498456808&src=http:\/\/img.mp.itc.cn\/upload\/20170606\/444dc5a448044ce79f7354eece1d4f60_th.jpg",
                        "width": 0,
                        "height": 0
                    },
                    "big": {
                        "url": "https:\/\/timg01.bdimg.com\/timg?tc&quality=90&size=b960_640&di=16cad00a47ef5bdb5a6c2a9837c4016b&sec=1498456808&src=http:\/\/img.mp.itc.cn\/upload\/20170606\/444dc5a448044ce79f7354eece1d4f60_th.jpg",
                        "width": 0,
                        "height": 0
                    }
                }
            }, {
                "type": "text",
                "data": "项目创建完毕之后，进入该文件夹。"
            }, {
                "type": "image",
                "data": {
                    "original": {
                        "url": "http:\/\/img.mp.itc.cn\/upload\/20170606\/2dca32207ed843be9098edc25b2b2291.jpg",
                        "width": 0,
                        "height": 0
                    },
                    "small": {
                        "url": "https:\/\/timg01.bdimg.com\/timg?tc&quality=90&size=b960_640&di=d5ea1891f7a438ff8db50a7cf633bceb&sec=1498456808&src=http:\/\/img.mp.itc.cn\/upload\/20170606\/2dca32207ed843be9098edc25b2b2291.jpg",
                        "width": 0,
                        "height": 0
                    },
                    "big": {
                        "url": "https:\/\/timg01.bdimg.com\/timg?tc&quality=90&size=b960_640&di=d5ea1891f7a438ff8db50a7cf633bceb&sec=1498456808&src=http:\/\/img.mp.itc.cn\/upload\/20170606\/2dca32207ed843be9098edc25b2b2291.jpg",
                        "width": 0,
                        "height": 0
                    }
                }
            }, {
                "type": "text",
                "data": "我们会发现里面有一个叫做package.json的文件，这个文件里包含了项目所需要的所有依赖。当我们第一次运行项目之前，还需要安装该文件里的依赖包。"
            }, {
                "type": "text",
                "data": "安装完毕之后，我们就可以启动该项目了。"
            }, {
                "type": "image",
                "data": {
                    "original": {
                        "url": "http:\/\/img.mp.itc.cn\/upload\/20170606\/13709d4d39124193a07977fb903bd5a0_th.jpg",
                        "width": 0,
                        "height": 0
                    },
                    "small": {
                        "url": "https:\/\/timg01.bdimg.com\/timg?tc&quality=90&size=b960_640&di=0a6182edd2023b0a55bb1e1a9a760d87&sec=1498456808&src=http:\/\/img.mp.itc.cn\/upload\/20170606\/13709d4d39124193a07977fb903bd5a0_th.jpg",
                        "width": 0,
                        "height": 0
                    },
                    "big": {
                        "url": "https:\/\/timg01.bdimg.com\/timg?tc&quality=90&size=b960_640&di=0a6182edd2023b0a55bb1e1a9a760d87&sec=1498456808&src=http:\/\/img.mp.itc.cn\/upload\/20170606\/13709d4d39124193a07977fb903bd5a0_th.jpg",
                        "width": 0,
                        "height": 0
                    }
                }
            }, {
                "type": "text",
                "data": "一般来说，启动之后会自动在浏览器中打开。"
            }, {
                "type": "image",
                "data": {
                    "original": {
                        "url": "http:\/\/img.mp.itc.cn\/upload\/20170606\/920b6257ee924372b345938c620bdb58_th.jpg",
                        "width": 0,
                        "height": 0
                    },
                    "small": {
                        "url": "https:\/\/timg01.bdimg.com\/timg?tc&quality=90&size=b960_640&di=13dcd98c71e75eee2561a99b341110df&sec=1498456808&src=http:\/\/img.mp.itc.cn\/upload\/20170606\/920b6257ee924372b345938c620bdb58_th.jpg",
                        "width": 0,
                        "height": 0
                    },
                    "big": {
                        "url": "https:\/\/timg01.bdimg.com\/timg?tc&quality=90&size=b960_640&di=13dcd98c71e75eee2561a99b341110df&sec=1498456808&src=http:\/\/img.mp.itc.cn\/upload\/20170606\/920b6257ee924372b345938c620bdb58_th.jpg",
                        "width": 0,
                        "height": 0
                    }
                }
            }, {
                "type": "text",
                "data": "create-react-app已经自动帮助我们实现了热更新，因此当我们修改代码时，浏览器会自动更新。当然，如果我们仅仅只是修改页面样式时，热更新将会非常方便，但是如果你正在进行单页面的组件开发，可能热更新能够提供的帮助非常有限。"
            }, {
                "type": "text",
                "data": "<b>4、认识项目<\/b>"
            }, {
                "type": "text",
                "data": "只要我们按照构建工具的规则进行开发，那么构建工具会自动帮助我们将代码进行整合，因此在该项目中开发时，我们并不需要自己来使用或者link标签来引入js与css，所以认识create-react-app的规则就变得很重要。"
            }, {
                "type": "text",
                "data": "初次创建的项目下，会有3个文件夹。"
            }, {
                "type": "text",
                "data": "1、node_modules"
            }, {
                "type": "text",
                "data": "项目依赖包存放位置。当我们运行npm install安装package.json中的依赖包时，该文件夹会自动创建，所有的依赖包会安装到该文件夹里。"
            }, {
                "type": "text",
                "data": "2、public"
            }, {
                "type": "text",
                "data": "主要的作用是html入口文件的存放。当然我们也可以存放其他公用的静态资源，如图片，css等。其中的index.html就是我们项目的入口html文件"
            }, {
                "type": "text",
                "data": "3、src"
            }, {
                "type": "text",
                "data": "组件的存放目录。在create-react-app创建的项目中，每一个单独的文件都可以被看成一个单独的模块，单独的image，单独的css，单独js等，而所有的组件都存放于src目录中，其中index.js则是js的入口文件。虽然我们并没有在index.html中使用标签引入他，但是他的作用就和此一样。"
            }, {
                "type": "text",
                "data": "当然，如果我们要进一步进行react的学习，那么肯定需要了解多一点的规则，但是在学习react之前，我们还是先把ES6 modules的知识搞定在说吧，所以，接下来你要做的事情就是，删掉src目录里的除了index.js之外的所有文件，并清空index.js，我们从0开始学习ES6 modules。"
            }, {
                "type": "text",
                "data": "为了确保程序仍然能够正常运行，我们在index.js中随便写点代码测试一下"
            }, {
                "type": "image",
                "data": {
                    "original": {
                        "url": "http:\/\/img.mp.itc.cn\/upload\/20170606\/adcbb59bd69a497dbd9d6d269dd57245_th.jpg",
                        "width": 0,
                        "height": 0
                    },
                    "small": {
                        "url": "https:\/\/timg01.bdimg.com\/timg?tc&quality=90&size=b960_640&di=b73cca42db6c38f148363218fca957fa&sec=1498456808&src=http:\/\/img.mp.itc.cn\/upload\/20170606\/adcbb59bd69a497dbd9d6d269dd57245_th.jpg",
                        "width": 0,
                        "height": 0
                    },
                    "big": {
                        "url": "https:\/\/timg01.bdimg.com\/timg?tc&quality=90&size=b960_640&di=b73cca42db6c38f148363218fca957fa&sec=1498456808&src=http:\/\/img.mp.itc.cn\/upload\/20170606\/adcbb59bd69a497dbd9d6d269dd57245_th.jpg",
                        "width": 0,
                        "height": 0
                    }
                }
            }, {
                "type": "text",
                "data": "那么我们就可以在这个环境下学习ES6的所有知识了，当然也包括ES6 modules。"
            }, {
                "type": "text",
                "data": "<b>ES6 modules<\/b>"
            }, {
                "type": "text",
                "data": "1. 引入模块"
            }, {
                "type": "text",
                "data": "首先在src目录下创建一个test.js，在test.js中我们随便干点什么简单的事情即可。"
            }, {
                "type": "text",
                "data": "在index.js中通过import引入test.js，这是我们要学会的第一个语法"
            }, {
                "type": "image",
                "data": {
                    "original": {
                        "url": "http:\/\/img.mp.itc.cn\/upload\/20170606\/bb85faa8da2240c7907af29536612818.jpg",
                        "width": 0,
                        "height": 0
                    },
                    "small": {
                        "url": "https:\/\/timg01.bdimg.com\/timg?tc&quality=90&size=b960_640&di=bcccb616a3f4438f5f971c596a2df14c&sec=1498456808&src=http:\/\/img.mp.itc.cn\/upload\/20170606\/bb85faa8da2240c7907af29536612818.jpg",
                        "width": 0,
                        "height": 0
                    },
                    "big": {
                        "url": "https:\/\/timg01.bdimg.com\/timg?tc&quality=90&size=b960_640&di=bcccb616a3f4438f5f971c596a2df14c&sec=1498456808&src=http:\/\/img.mp.itc.cn\/upload\/20170606\/bb85faa8da2240c7907af29536612818.jpg",
                        "width": 0,
                        "height": 0
                    }
                }
            }, {
                "type": "text",
                "data": "1) import表示引入一个模块，"
            }, {
                "type": "text",
                "data": "2) test 我们暂时理解为引入模块的名字，"
            }, {
                "type": "text",
                "data": "3) from表示从哪里引入"
            }, {
                "type": "text",
                "data": "4) .\/test为.\/test.js的简写，表示将要引入模块的路径"
            }, {
                "type": "image",
                "data": {
                    "original": {
                        "url": "http:\/\/img.mp.itc.cn\/upload\/20170606\/e90464f2812841ef8b4c1582a40dfb65_th.jpg",
                        "width": 0,
                        "height": 0
                    },
                    "small": {
                        "url": "https:\/\/timg01.bdimg.com\/timg?tc&quality=90&size=b960_640&di=56407cf5b507dae6a9d1d81d476732b4&sec=1498456808&src=http:\/\/img.mp.itc.cn\/upload\/20170606\/e90464f2812841ef8b4c1582a40dfb65_th.jpg",
                        "width": 0,
                        "height": 0
                    },
                    "big": {
                        "url": "https:\/\/timg01.bdimg.com\/timg?tc&quality=90&size=b960_640&di=56407cf5b507dae6a9d1d81d476732b4&sec=1498456808&src=http:\/\/img.mp.itc.cn\/upload\/20170606\/e90464f2812841ef8b4c1582a40dfb65_th.jpg",
                        "width": 0,
                        "height": 0
                    }
                }
            }, {
                "type": "text",
                "data": "结果是test中的代码执行，index.js中模块test为一个空对象"
            }, {
                "type": "text",
                "data": "引入这个动作执行时，test.js中的代码也执行了。由于在test.js中并没有对外暴露任何接口，因此index.js中的test为一个空对象，那么对外暴露接口的方式，则是我们要学习的第二个语法。"
            }, {
                "type": "text",
                "data": "2. 对外提供接口"
            }, {
                "type": "text",
                "data": "ES6 modules使用export关键字对外提供接口，在我们刚才创建的test.js中，我们添加如下代码"
            }, {
                "type": "image",
                "data": {
                    "original": {
                        "url": "http:\/\/img.mp.itc.cn\/upload\/20170606\/cd268e7a2b6a4a1bb4c56dcac71b2dfb_th.jpg",
                        "width": 0,
                        "height": 0
                    },
                    "small": {
                        "url": "https:\/\/timg01.bdimg.com\/timg?tc&quality=90&size=b960_640&di=90cf58856ee9022e552e22ad6dbfc12f&sec=1498456808&src=http:\/\/img.mp.itc.cn\/upload\/20170606\/cd268e7a2b6a4a1bb4c56dcac71b2dfb_th.jpg",
                        "width": 0,
                        "height": 0
                    },
                    "big": {
                        "url": "https:\/\/timg01.bdimg.com\/timg?tc&quality=90&size=b960_640&di=90cf58856ee9022e552e22ad6dbfc12f&sec=1498456808&src=http:\/\/img.mp.itc.cn\/upload\/20170606\/cd268e7a2b6a4a1bb4c56dcac71b2dfb_th.jpg",
                        "width": 0,
                        "height": 0
                    }
                }
            }, {
                "type": "image",
                "data": {
                    "original": {
                        "url": "http:\/\/img.mp.itc.cn\/upload\/20170606\/46a9a216a0a445068fce50d855100230_th.jpg",
                        "width": 0,
                        "height": 0
                    },
                    "small": {
                        "url": "https:\/\/timg01.bdimg.com\/timg?tc&quality=90&size=b960_640&di=9106b26741d27acc1e3ed05131b6dc39&sec=1498456808&src=http:\/\/img.mp.itc.cn\/upload\/20170606\/46a9a216a0a445068fce50d855100230_th.jpg",
                        "width": 0,
                        "height": 0
                    },
                    "big": {
                        "url": "https:\/\/timg01.bdimg.com\/timg?tc&quality=90&size=b960_640&di=9106b26741d27acc1e3ed05131b6dc39&sec=1498456808&src=http:\/\/img.mp.itc.cn\/upload\/20170606\/46a9a216a0a445068fce50d855100230_th.jpg",
                        "width": 0,
                        "height": 0
                    }
                }
            }, {
                "type": "text",
                "data": "在test.js中，我们使用export default对包暴露了一个对象。他的意思就是当我们使用import test from '.\/test'时，这个test对象就默认等于export default暴露的对象。"
            }, {
                "type": "text",
                "data": "我们还可以在test.js中，仅仅通过export暴露几个方法与属性，我们来看看index.js中test会变成什么样子。"
            }, {
                "type": "image",
                "data": {
                    "original": {
                        "url": "http:\/\/img.mp.itc.cn\/upload\/20170606\/61620f2188a44b728efecca66f58b59c.jpg",
                        "width": 0,
                        "height": 0
                    },
                    "small": {
                        "url": "https:\/\/timg01.bdimg.com\/timg?tc&quality=90&size=b960_640&di=6653809b1f71183ff27e51ed22dee8d1&sec=1498456808&src=http:\/\/img.mp.itc.cn\/upload\/20170606\/61620f2188a44b728efecca66f58b59c.jpg",
                        "width": 0,
                        "height": 0
                    },
                    "big": {
                        "url": "https:\/\/timg01.bdimg.com\/timg?tc&quality=90&size=b960_640&di=6653809b1f71183ff27e51ed22dee8d1&sec=1498456808&src=http:\/\/img.mp.itc.cn\/upload\/20170606\/61620f2188a44b728efecca66f58b59c.jpg",
                        "width": 0,
                        "height": 0
                    }
                }
            }, {
                "type": "text",
                "data": "保存运行后，我们发现，index.js中的test对象并没有变化，因为它仅仅等于export default抛出的对象，因此，为了获得模块test.js暴露的所有接口，我们得通过如下的方式。"
            }, {
                "type": "text",
                "data": "其中的 * 表示所有，这是比较常用的通配符，as表示别名，* as test的意思是将test.js暴露的所有接口组成的对象，命名为test。那么我们在index.js中log出test，结果就如下。"
            }, {
                "type": "image",
                "data": {
                    "original": {
                        "url": "http:\/\/img.mp.itc.cn\/upload\/20170606\/a287fc7072f94b65848243caf97a0146_th.jpg",
                        "width": 0,
                        "height": 0
                    },
                    "small": {
                        "url": "https:\/\/timg01.bdimg.com\/timg?tc&quality=90&size=b960_640&di=04c0b7dfd41307f1e1ebb24c681ac202&sec=1498456808&src=http:\/\/img.mp.itc.cn\/upload\/20170606\/a287fc7072f94b65848243caf97a0146_th.jpg",
                        "width": 0,
                        "height": 0
                    },
                    "big": {
                        "url": "https:\/\/timg01.bdimg.com\/timg?tc&quality=90&size=b960_640&di=04c0b7dfd41307f1e1ebb24c681ac202&sec=1498456808&src=http:\/\/img.mp.itc.cn\/upload\/20170606\/a287fc7072f94b65848243caf97a0146_th.jpg",
                        "width": 0,
                        "height": 0
                    }
                }
            }, {
                "type": "text",
                "data": "如果大家还记得前面一篇文章里，我所讲的ES6解析结构的语法，那么对于如下的用法相信就不难理解。"
            }, {
                "type": "image",
                "data": {
                    "original": {
                        "url": "http:\/\/img.mp.itc.cn\/upload\/20170606\/a8258bda74674214832a6e17e097b3c6.jpg",
                        "width": 0,
                        "height": 0
                    },
                    "small": {
                        "url": "https:\/\/timg01.bdimg.com\/timg?tc&quality=90&size=b960_640&di=9f8d1c011719b5ba56c4bfef6cf5cad9&sec=1498456808&src=http:\/\/img.mp.itc.cn\/upload\/20170606\/a8258bda74674214832a6e17e097b3c6.jpg",
                        "width": 0,
                        "height": 0
                    },
                    "big": {
                        "url": "https:\/\/timg01.bdimg.com\/timg?tc&quality=90&size=b960_640&di=9f8d1c011719b5ba56c4bfef6cf5cad9&sec=1498456808&src=http:\/\/img.mp.itc.cn\/upload\/20170606\/a8258bda74674214832a6e17e097b3c6.jpg",
                        "width": 0,
                        "height": 0
                    }
                }
            }, {
                "type": "text",
                "data": "test，仍然表示为export default暴露的对象，而{ bar , zcar}则表示利用解析结构的语法，从整个返回对象中去取得对应的接口。输出结果也就很清晰了。"
            }, {
                "type": "image",
                "data": {
                    "original": {
                        "url": "http:\/\/img.mp.itc.cn\/upload\/20170606\/2409ed1f52004206bcdb8521ada28644_th.jpg",
                        "width": 0,
                        "height": 0
                    },
                    "small": {
                        "url": "https:\/\/timg01.bdimg.com\/timg?tc&quality=90&size=b960_640&di=5e781f5eacd75069dc69e0a9e2a9854b&sec=1498456808&src=http:\/\/img.mp.itc.cn\/upload\/20170606\/2409ed1f52004206bcdb8521ada28644_th.jpg",
                        "width": 0,
                        "height": 0
                    },
                    "big": {
                        "url": "https:\/\/timg01.bdimg.com\/timg?tc&quality=90&size=b960_640&di=5e781f5eacd75069dc69e0a9e2a9854b&sec=1498456808&src=http:\/\/img.mp.itc.cn\/upload\/20170606\/2409ed1f52004206bcdb8521ada28644_th.jpg",
                        "width": 0,
                        "height": 0
                    }
                }
            }, {
                "type": "text",
                "data": "这种方式还是比较常见，比如我们在使用react时，常常这样使用："
            }, {
                "type": "text",
                "data": "它其实暗示了React的封装方式，也暗示了我们应该如何去封装我们的模块。"
            }, {
                "type": "text",
                "data": "这里我们能够直接引入react的原因，是因为我们将它安装到了文件夹node_modules中，该文件夹中安装的所有模块都可以这样直接引用。例如我们安装一个jquery。"
            }, {
                "type": "text",
                "data": "然后在其他模块中就可以直接引入"
            }, {
                "type": "text",
                "data": "这样，我们可以和往常一样使用jquery。"
            }, {
                "type": "text",
                "data": "通过这样方式，我们还可以扩展更多的库，这就使得我们这个开发环境不仅仅能够用于react的开发，怎么用，完全取决与你自己。"
            }, {
                "type": "text",
                "data": "OK，ES6 模块的基础语法大概就这些吧，他告诉了我们在ES6中，一个模块应该如何对外暴露接口与如何引入其他模块暴露的接口，这个知识点在实际开发中非常常用，因此虽然简单，但是不得不掌握，这也是大家进一步学习react或者vue的基础，主要的难点大概在于本地开发环境的折腾，如果你是初次折腾这些，可能会遇到一些小问题，所以一定要有一点耐心。"
            }, {
                "type": "text",
                "data": "通常来说，一个知识点，在完全理解之前还是有点难度的，但是理解之后就变得非常简单，所以如果你在学习这个知识点时感觉有点困难，也不要过于担心，多多动手尝试，并在实践中运用起来，相信很快就能掌握。"
            }, {
                "type": "text",
                "data": "随时关注更多前端干货文章！"
            }, {
                "type": "text",
                "data": "<b>▼<\/b>"
            }, {
                "type": "text",
                "data": "微信：IMWebTech"
            }]
        }
}